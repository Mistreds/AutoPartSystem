<UserControl x:Class="AutoPartSystem.View.Warehouse.WarehouseTable"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AutoPartSystem.View.Warehouse"
             mc:Ignorable="d" 
               xmlns:ViewModel="clr-namespace:AutoPartSystem.ViewModel"
  xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             d:DataContext="{d:DesignInstance Type=ViewModel:WarehouseViewModel}"
             d:DesignHeight="450" 
             xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes" d:DesignWidth="600"
             x:Name="warehousetable"
             xmlns:conv="clr-namespace:AutoPartSystem.Converted"
             LostKeyboardFocus="warehousetable_LostKeyboardFocus"
             
             PreviewKeyDown="warehouse_KeyDown" 
             >
    <UserControl.Style>
        <Style TargetType="UserControl">
            <Style.Triggers>
                <DataTrigger Binding="{Binding WarehousesTable.Count}" Value="0">
                    <Setter Property="FocusManager.IsFocusScope" Value="True"></Setter>
                    <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=TextFindAll}"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsAllFind}" Value="True">
                    <Setter Property="FocusManager.IsFocusScope" Value="False"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsModelFind}" Value="True">
                    <Setter Property="FocusManager.IsFocusScope" Value="False"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsDesctiptionFind}" Value="True">
                    <Setter Property="FocusManager.IsFocusScope" Value="False"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsArticleFind}" Value="True">
                    <Setter Property="FocusManager.IsFocusScope" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
    <UserControl.InputBindings>
        <KeyBinding Key="F5"  Command="{Binding UpdateTable}"/>
    </UserControl.InputBindings>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.LightBlue.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <PathGeometry x:Key="put" Figures="">
            </PathGeometry>
            <Style TargetType="ToggleButton" x:Key="Tooglefilter">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="White">
                                <Path   x:Name="Arrow" Grid.Column="1" Fill="Black" HorizontalAlignment="Right" VerticalAlignment="Center" 
                  >
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="Arrow" Property="Data" Value="M 0,5 L7 -3 L14 5 Z"></Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter  TargetName="Arrow"  Property="Data" Value="M0 5 L7 13 L14 5 Z"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button" x:Key="CityPrihod">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <ContentPresenter Content="{TemplateBinding Content}"></ContentPresenter>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <conv:IntToSpace x:Key="IntToSpace"></conv:IntToSpace>
        </ResourceDictionary>
       
    </UserControl.Resources>
    <Grid  PreviewKeyDown="warehouse_KeyDown" Background="White" >

        <DataGrid VirtualizingStackPanel.VirtualizationMode="Recycling"  ClipboardCopyMode="None" SourceUpdated="warehouse_SourceUpdated" CopyingRowClipboardContent="warehouse_CopyingRowClipboardContent" FrozenColumnCount="8" ContextMenuOpening="warehouse_ContextMenuOpening" ContextMenuClosing="warehouse_ContextMenuClosing" MouseMove="warehouse_MouseMove" KeyDown="warehouse_KeyDown" KeyUp="warehouse_KeyDown"  PreviewKeyDown="warehouse_KeyDown"   BorderBrush="Black"  LoadingRow="warehouse_LoadingRow" BorderThickness="1" GridLinesVisibility="All" HeadersVisibility="All"  x:Name="warehouse"  ItemsSource="{Binding WarehousesTable, UpdateSourceTrigger=PropertyChanged}" Background="White" AutoGenerateColumns="False"  CanUserDeleteRows="False" CanUserAddRows="False"  >
            <DataGrid.InputBindings>
                
            </DataGrid.InputBindings>
            <DataGrid.Columns>
                <DataGridTextColumn  Width="105" IsReadOnly="True" Header="Бренд" Binding="{Binding Goods.Brand.Name}">
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Бренд"></TextBlock>
                                <ToggleButton  Margin="10,0,0,0" Width="15" Height="15" Style="{StaticResource Tooglefilter}" x:Name="Filter" IsChecked="{Binding ElementName=warehousetable, Path=DataContext.IsBrandFind}" ></ToggleButton>

                            </StackPanel>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Width="120" >
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Модель"></TextBlock>
                                <ToggleButton  Margin="10,0,0,0" Width="15" Height="15" Style="{StaticResource Tooglefilter}" x:Name="Filter" IsChecked="{Binding ElementName=warehousetable, Path=DataContext.IsModelFind}" ></ToggleButton>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <ListBox ItemsSource="{Binding Goods.GoodsModel}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <TextBlock TextWrapping="Wrap" >
                                                    <Run Text="{Binding Model.Mark.Name}"></Run>
                                                    <Run></Run>
                                                    <Run Text="{Binding Model.Name}"></Run>
                                                </TextBlock>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                   
                </DataGridTemplateColumn>
                <DataGridTextColumn Width="150"   IsReadOnly="True" x:Name="DescrFind" CanUserSort="False"   Binding="{Binding Goods.Description}">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel  Orientation="Horizontal">
                                <TextBlock Text="Описание"></TextBlock>
                                <ToggleButton  Margin="10,0,0,0" Width="15" Height="15" Style="{StaticResource Tooglefilter}" x:Name="Filter" IsChecked="{Binding ElementName=warehousetable, Path=DataContext.IsDesctiptionFind}" ></ToggleButton>

                            </StackPanel>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>
                <DataGridTextColumn Width="120" IsReadOnly="True"  CanUserSort="False"  Binding="{Binding Goods.Article}">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Артикуль"></TextBlock>
                                <ToggleButton  Margin="10,0,0,0" Width="15" Height="15" Style="{StaticResource Tooglefilter}" x:Name="Filter" IsChecked="{Binding ElementName=warehousetable, Path=DataContext.IsArticleFind}" ></ToggleButton>

                            </StackPanel>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>
                <DataGridTextColumn  IsReadOnly="True" Header="OEM"  Width="100" Binding="{Binding Note}"></DataGridTextColumn>
                <DataGridTemplateColumn IsReadOnly="True"  SortMemberPath="InAlmata" Header="ALA">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Border >

                                <Button Style="{StaticResource CityPrihod}" Content="{Binding InAlmata}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDoubleClick">
                                            <i:InvokeCommandAction Command="{Binding GetAlmataInput }" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn IsReadOnly="True" SortMemberPath="InAstana" Header="NQZ">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>

                                <Button Style="{StaticResource CityPrihod}" Content="{Binding InAstana}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDoubleClick">
                                            <i:InvokeCommandAction Command="{Binding GetAstanaInput }" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
 
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn  IsReadOnly="True" SortMemberPath="InAktau" Header="SCO" >
                    <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>

                        <Button VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Style="{StaticResource CityPrihod}" Content="{Binding InAktau}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding GetAktauInput }" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>

                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn  IsReadOnly="True" Header="Место" Binding="{Binding WarehousePlace}"></DataGridTextColumn>
                <DataGridTextColumn  IsReadOnly="True" Header="Цена прих" Binding="{Binding  PromInput, Converter={StaticResource IntToSpace}, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridTextColumn  IsReadOnly="True" Header="Доставка NQZ" x:Name="NQZArrive" Binding="{Binding Goods.InputAstana, Converter={StaticResource IntToSpace}, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridTextColumn  IsReadOnly="True" Header="Доставка SCO" x:Name="SCOArrive" Binding="{Binding Goods.InputAktau, Converter={StaticResource IntToSpace}, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridTextColumn  IsReadOnly="True" Header="Цена рек" Binding="{Binding Goods.RecomPrice, Converter={StaticResource IntToSpace}, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                
                <DataGridTextColumn x:Name="CellCount"  Header="Кол-во" Binding="{Binding Goods.CountCell, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridTextColumn x:Name="CellPrice" Header="Цена продажи" Binding="{Binding Goods.PriceCell, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridTemplateColumn Header="Продажа" x:Name="Prodash">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsSelected,UpdateSourceTrigger=PropertyChanged}"></CheckBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn x:Name="TypePay" Header="Тип оплаты">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox Height="40"  VerticalAlignment="Center"  ItemsSource="{Binding Path=DataContext.TypePay,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"  DisplayMemberPath="Name"  SelectedValuePath="Id" SelectedValue="{Binding Goods.TypePayId, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="0" ></ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
               
                <DataGridTemplateColumn Header="Приход"  x:Name="Prihod"  >
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Сделать приход"   CommandParameter="{Binding Path=SelectedItem,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Command="{Binding Path=DataContext.CreatePrihod,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"></Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.Resources>
                <DataTemplate x:Key="Row_Sel">
                    <ListBox ItemsSource="{Binding GoodsBooking}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Сотрудник "></TextBlock>
                                    <TextBlock Text="{Binding Invoice.Employee.Name}"></TextBlock>
                                    <TextBlock Text=" забронировал "></TextBlock>
                                    <TextBlock Text="{Binding Count}"></TextBlock>
                                    <TextBlock Text=" товаров"></TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    
                </DataTemplate>
                <ContextMenu x:Key="Menu1">
                    <MenuItem Header="Добавить товар" Command="{Binding Path=DataContext.AddNewWarehouseWinOpen,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                        <MenuItem.Style>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource MaterialDesignMenuItem}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=DataContext.Employee.SetGood,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Header="Сделать приход" x:Name="CreatePrihodMenu" CommandParameter="{Binding Path=SelectedItem,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Command="{Binding Path=DataContext.CreatePrihod,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" >
                        <MenuItem.Style>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource MaterialDesignMenuItem}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=DataContext.Employee.SetGoodCount,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Header="Сделать продажу" Command="{Binding Path=DataContext.AddSale,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" >
                        <MenuItem.Style>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource MaterialDesignMenuItem}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=DataContext.Employee.SetCell,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Header="Установить цену"  CommandParameter="{Binding Path=SelectedItem,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Command="{Binding Path=DataContext.SetWarePrice,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                        <MenuItem.Style>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource MaterialDesignMenuItem}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=DataContext.Employee.SetPrihod,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                    </MenuItem>
                    <MenuItem Header="Открыть карточку товара"  CommandParameter="{Binding Path=SelectedItem,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Command="{Binding Path=DataContext.OpenGoodCard,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"></MenuItem>
                   
                </ContextMenu>
                <ContextMenu x:Key="Menu2">
                    <MenuItem Header="Добавить в продажу" CommandParameter="{Binding Path=SelectedItem,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Command="{Binding Path=DataContext.AddToInvoice,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"  ></MenuItem>
                </ContextMenu>
            </DataGrid.Resources>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                    <Setter Property="ContextMenu" Value="{StaticResource Menu1 }"></Setter>
                                       
                    
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=DataContext.IsSelectForInvoice,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Value="True">
                            <Setter Property="ContextMenu" Value="{StaticResource Menu2 }"></Setter>
                           
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsBooking}" Value="True">
                            <Setter Property="DetailsVisibility" Value="Visible"></Setter>
                            <Setter Property="DetailsTemplate" Value="{StaticResource Row_Sel}"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>
        <Popup  x:Name="DescrPopup" Height="320" Width="260" Loaded="DescrPopup_Loaded" Placement="Mouse" StaysOpen="False" IsOpen="{Binding ElementName=warehousetable, Path=DataContext.IsDesctiptionFind}">
            <Border    BorderBrush="Black" BorderThickness="1">
                <Grid Background="White" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60"></RowDefinition>
                        <RowDefinition Height="50"></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition Height="50"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition ></ColumnDefinition>
                        <ColumnDefinition Width="16" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Thumb HorizontalAlignment="Right" Grid.Column="1" VerticalAlignment="Bottom" Width="16"  Height="30" Grid.RowSpan="4"
Background="Black"
                              DragStarted="onDragStarted" DragDelta="onDragDelta" DragCompleted="onDragCompleted"/>
                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" >
                        <Button Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding Path=DataContext.SortWarehouse,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="DescriptionDown" Content="Сортировать по убыванию"></Button>
                        <Button Command="{Binding Path=DataContext.SortWarehouse,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="DescriptionUp" Style="{StaticResource MaterialDesignFlatButton}" Content="Сортировать по возрастанию"></Button>
                    </StackPanel>
                    <TextBox x:Name="descText"   wpf:HintAssist.HintOpacity="1" Grid.Row="1" wpf:HintAssist.Hint="Артикуль" wpf:HintAssist.IsFloating="True" HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="40" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewKeyUp">
                                <i:InvokeCommandAction Command="{Binding Path=DataContext.SelectFindDesctiption,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding ElementName=descText, Path=Text, UpdateSourceTrigger=PropertyChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <DataGrid  AutoGenerateColumns="False" Grid.Row="2" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" IsReadOnly="True" CanUserResizeRows="False" CanUserSortColumns="False"   HeadersVisibility="None" ItemsSource="{Binding Path=DataContext.DescriptionFind,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" >
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="3*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}"  >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.SelectAllDesctiption,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding model_id}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </CheckBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Width="7*" Binding="{Binding model_name}"></DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid Grid.Row="3"  >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                            <ColumnDefinition Width="4*"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                            <ColumnDefinition Width="4*"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="1" Command="{Binding Path=DataContext.SetFilter,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Content="Ок"></Button>
                        <Button Grid.Column="3" Content="Отмена"></Button>
                    </Grid>
                </Grid>
            </Border>
        </Popup>
        <Popup x:Name="PupupModel" Height="320" Width="260"  Placement="Mouse" StaysOpen="False" IsOpen="{Binding IsModelFind}">
            <Border   BorderBrush="Black" BorderThickness="1">
                <Grid Background="White" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60"></RowDefinition>
                        <RowDefinition Height="50"></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition Height="50"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition ></ColumnDefinition>
                        <ColumnDefinition Width="16" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" >
                        <Button Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding SortWarehouse}" CommandParameter="ModelDown" Content="Сортировать по убыванию"></Button>
                        <Button Command="{Binding SortWarehouse}" CommandParameter="ModelUp" Style="{StaticResource MaterialDesignFlatButton}" Content="Сортировать по возрастанию"></Button>
                    </StackPanel>
                    <Thumb HorizontalAlignment="Right" Grid.Column="1" VerticalAlignment="Bottom" Width="16"  Height="30" Grid.RowSpan="4"
Background="Black"
                              DragStarted="onDragStarted" DragDelta="Thumb_DragDelta" DragCompleted="onDragCompleted"/>
                    <TextBox x:Name="ModelText"   wpf:HintAssist.HintOpacity="1" Grid.Row="1" wpf:HintAssist.Hint="Модель" wpf:HintAssist.IsFloating="True"   HorizontalAlignment="Stretch" Margin="10,0,10,0" VerticalAlignment="Top" Height="40" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewKeyUp">
                                <i:InvokeCommandAction Command="{Binding Path=DataContext.SelectFindModel,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding ElementName=ModelText, Path=Text, UpdateSourceTrigger=PropertyChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <DataGrid  AutoGenerateColumns="False" Grid.Row="2" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" IsReadOnly="True" CanUserResizeRows="False" CanUserSortColumns="False"   HeadersVisibility="None" ItemsSource="{Binding MarkModelFind}" >
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="3*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}"  >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.SelectAllModel,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding model_id}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </CheckBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Width="7*" Binding="{Binding model_name}"></DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid Grid.Row="3"  >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                            <ColumnDefinition Width="4*"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                            <ColumnDefinition Width="4*"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="1" Command="{Binding Path=DataContext.SetFilter,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Content="Ок"></Button>
                        <Button Grid.Column="3" Content="Отмена"></Button>
                    </Grid>
                </Grid>
            </Border>
        </Popup>
        <Popup x:Name="PopupArticle"  Height="320" Width="260" Placement="Mouse" StaysOpen="False" IsOpen="{Binding ElementName=warehousetable, Path=DataContext.IsArticleFind}" Opened="PopupArticle_Opened">
            <Border   BorderBrush="Black" BorderThickness="1">
                <Grid Background="White" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60"></RowDefinition>
                        <RowDefinition Height="50"></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition Height="50"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition ></ColumnDefinition>
                        <ColumnDefinition Width="16" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Thumb HorizontalAlignment="Right" Grid.Column="1" VerticalAlignment="Bottom" Width="16"  Height="30" Grid.RowSpan="4"
Background="Black"
                              DragStarted="onDragStarted"  DragDelta="Thumb_DragDelta_1" DragCompleted="onDragCompleted"/>
                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" >
                        <Button Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding Path=DataContext.SortWarehouse,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="ArticleDown" Content="Сортировать по убыванию"></Button>
                        <Button Command="{Binding Path=DataContext.SortWarehouse,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="ArticleUp" Style="{StaticResource MaterialDesignFlatButton}" Content="Сортировать по возрастанию"></Button>
                    </StackPanel>
                    <TextBox x:Name="ArtText"   wpf:HintAssist.HintOpacity="1" Grid.Row="1" wpf:HintAssist.Hint="Описание" wpf:HintAssist.IsFloating="True"    HorizontalAlignment="Stretch" Margin="10,0,10,0" VerticalAlignment="Top" Height="40" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewKeyUp">
                                <i:InvokeCommandAction Command="{Binding Path=DataContext.SelectFindArticle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding ElementName=ArtText, Path=Text, UpdateSourceTrigger=PropertyChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <DataGrid AutoGenerateColumns="False" Grid.Row="2" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" IsReadOnly="True" CanUserResizeRows="False" CanUserSortColumns="False"   HeadersVisibility="None" ItemsSource="{Binding Path=DataContext.ArticleFind,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" >
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="3*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}"  >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding Path=DataContext.SelectAllArticle,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding model_id}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </CheckBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Width="7*" Binding="{Binding model_name}"></DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid Grid.Row="3"  >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                            <ColumnDefinition Width="4*"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                            <ColumnDefinition Width="4*"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="1" Command="{Binding Path=DataContext.SetFilter,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Content="Ок"></Button>
                        <Button Grid.Column="3" Content="Отмена"></Button>
                    </Grid>
                </Grid>
            </Border>
        </Popup>
        <Popup x:Name="PopupFind"  Height="60" Width="350" Placement="Mouse" StaysOpen="False" IsOpen="{Binding ElementName=warehousetable, Path=DataContext.IsAllFind}">
            <Border BorderBrush="Black" BorderThickness="1">
            <Grid Background="White" >
                <Grid.RowDefinitions>
                    
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                    <ColumnDefinition Width="75" ></ColumnDefinition>
                    <ColumnDefinition Width="10"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBox Text="{Binding TextFindAll, UpdateSourceTrigger=PropertyChanged}"   x:Name="TextFindAll" Height="40" Grid.Column="1">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding SetStringFilter}"></KeyBinding>
                    </TextBox.InputBindings>
                </TextBox>
                <Button Grid.Column="3" Width="75" Command="{Binding SetStringFilter}" Content="Найти">
                   
                </Button>
            </Grid>
            </Border>
        </Popup>
        <Popup x:Name="PopupBrand"  Height="320" Width="260" Placement="Mouse" StaysOpen="False" IsOpen="{Binding DataContext.IsBrandFind, ElementName=warehousetable}"  >
            <Border   BorderBrush="Black" BorderThickness="1">
                <Grid Background="White" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="60"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="16" />
                    </Grid.ColumnDefinitions>
                    <Thumb HorizontalAlignment="Right" Grid.Column="1" VerticalAlignment="Bottom" Width="16"  Height="30" Grid.RowSpan="4"
                        Background="Black"
                        DragStarted="onDragStarted"  DragDelta="Thumb_DragDelta_2" DragCompleted="onDragCompleted"/>
                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" >
                        <Button Style="{StaticResource MaterialDesignFlatButton}" Command="{Binding DataContext.SortWarehouse, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="BrandDown" Content="Сортировать по убыванию"/>
                        <Button Command="{Binding DataContext.SortWarehouse, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="BrandUp" Style="{StaticResource MaterialDesignFlatButton}" Content="Сортировать по возрастанию"/>
                    </StackPanel>
                    <TextBox x:Name="ArtText1"   wpf:HintAssist.HintOpacity="1" Grid.Row="1" wpf:HintAssist.Hint="Описание" wpf:HintAssist.IsFloating="True"    HorizontalAlignment="Stretch" Margin="10,0,10,0" VerticalAlignment="Top" Height="40" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewKeyUp">
                                <i:InvokeCommandAction Command="{Binding DataContext.SelectFindBrand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Text, ElementName=ArtText1, UpdateSourceTrigger=PropertyChanged}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <DataGrid AutoGenerateColumns="False" Grid.Row="2" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" IsReadOnly="True" CanUserResizeRows="False" CanUserSortColumns="False"   HeadersVisibility="None" ItemsSource="{Binding DataContext.BrandFind, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" >
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="3*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}"  >
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.SelectAllBrand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding model_id}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </CheckBox>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Width="7*" Binding="{Binding model_name}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid Grid.Row="3"  >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="1" Command="{Binding DataContext.SetFilter, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Content="Ок"/>
                        <Button Grid.Column="3" Content="Отмена"/>
                    </Grid>
                </Grid>
            </Border>
        </Popup>
    </Grid>
</UserControl>
